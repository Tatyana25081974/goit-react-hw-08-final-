import { useDispatch } from 'react-redux';
import { useState } from 'react';
import { deleteContact } from '../../redux/contacts/operations';
import { toast } from 'react-hot-toast';
import styles from './Contact.module.css';
import EditContactDialog from '../EditContactDialog/EditContactDialog';

export default function Contact({ id, name, number }) {
  const dispatch = useDispatch();
  const [openDialog, setOpenDialog] = useState(false); // –°—Ç–µ–π—Ç –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é –º–æ–¥–∞–ª–∫–∏

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É
  const handleDelete = async () => {
    const isConfirmed = window.confirm(`–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ ${name}?`);

    if (!isConfirmed) {
      return; // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–µ—Ä–µ–¥—É–º–∞–≤
    }

    try {
      await dispatch(deleteContact(id)).unwrap(); // –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
      toast.success('–ö–æ–Ω—Ç–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ! üóëÔ∏è');
    } catch {
      toast.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.');
    }
  };

  return (
    <li className={styles.item}>
      <p className={styles.text}>
        {name}: {number}
      </p>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è */}
      <div className={styles.buttons}>
        <button
          onClick={() => setOpenDialog(true)}
          className={`${styles.button} ${styles.editButton}`}
        >
          –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
        </button>

        <button
          onClick={handleDelete}
          className={`${styles.button} ${styles.deleteButton}`}
        >
          –í–∏–¥–∞–ª–∏—Ç–∏
        </button>
      </div>

      {/* –ú–æ–¥–∞–ª–∫–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è */}
      <EditContactDialog
        open={openDialog}
        onClose={() => setOpenDialog(false)}
        id={id}
        initialName={name}
        initialNumber={number}
      />
    </li>
  );
}
